{
  "title": "An Introduction to Programming in Go",
  "id": 1,
  "formatVersion": 2,
  "ideas": {
    "1": {
      "title": "1. Getting Started",
      "id": 2,
      "ideas": {
        "1": {
          "title": "Files and Folders",
          "id": 17
        },
        "2": {
          "title": "The Terminal",
          "id": 18
        },
        "3": {
          "title": "Text Editors",
          "id": 19
        },
        "4": {
          "title": "Go Tools",
          "id": 20
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "11": {
      "title": "2. Your First Program",
      "id": 3,
      "ideas": {
        "1": {
          "title": "How to Read a Go Program",
          "id": 22,
          "ideas": {
            "1": {
              "title": "whitespace",
              "id": 64,
              "ideas": {
                "1": {
                  "title": "bacause you can't see them",
                  "id": 65
                },
                "2": {
                  "title": "newlines",
                  "id": 66
                },
                "3": {
                  "title": "spaces",
                  "id": 67
                },
                "4": {
                  "title": "tabs",
                  "id": 68
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "2": {
              "title": "packages",
              "id": 69,
              "ideas": {
                "1": {
                  "title": "Go's way of organizing and reusing code",
                  "id": 70
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "3": {
              "title": "two types of Go programs",
              "id": 71,
              "ideas": {
                "1": {
                  "title": "executables",
                  "id": 72
                },
                "2": {
                  "title": "libraries",
                  "id": 73
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "4": {
              "title": "string literal",
              "id": 74,
              "ideas": {}
            },
            "5": {
              "title": "comment",
              "id": 76,
              "ideas": {
                "1": {
                  "title": "// xxxx",
                  "id": 77
                },
                "2": {
                  "title": "/* xxxxxx */",
                  "id": 78
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "6": {
              "title": "Println",
              "id": 79,
              "ideas": {
                "1": {
                  "title": "Print Line",
                  "id": 80
                }
              }
            }
          },
          "attr": {
            "style": {}
          }
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "21": {
      "title": "3. Types",
      "id": 4,
      "ideas": {
        "1": {
          "title": "Numbers",
          "id": 23,
          "ideas": {
            "1": {
              "title": "integers",
              "id": 83,
              "ideas": {
                "1": {
                  "title": "uint8, uint16, uint32, uint64, int8, int16, int32, int64",
                  "id": 85
                },
                "2": {
                  "title": "byte == uint8",
                  "id": 86
                },
                "3": {
                  "title": "rune == int32",
                  "id": 87
                },
                "4": {
                  "title": "machine dependent",
                  "id": 88,
                  "ideas": {
                    "1": {
                      "title": "uint",
                      "id": 89
                    },
                    "2": {
                      "title": "int",
                      "id": 90
                    },
                    "3": {
                      "title": "uintptr",
                      "id": 91
                    }
                  },
                  "attr": {
                    "collapsed": true,
                    "style": {}
                  }
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "2": {
              "title": "floating-point numbers",
              "id": 84,
              "ideas": {
                "1": {
                  "title": "not a number",
                  "id": 92,
                  "ideas": {
                    "1": {
                      "title": "NaN",
                      "id": 93,
                      "ideas": {
                        "1": {
                          "title": "0/0",
                          "id": 94
                        }
                      }
                    }
                  }
                },
                "2": {
                  "title": "positive and negative infinity",
                  "id": 95,
                  "ideas": {
                    "1": {
                      "title": "+∞",
                      "id": 97
                    },
                    "2": {
                      "title": "−∞",
                      "id": 98
                    }
                  }
                },
                "3": {
                  "title": "float32",
                  "id": 99,
                  "ideas": {
                    "1": {
                      "title": "single precision",
                      "id": 101
                    }
                  }
                },
                "4": {
                  "title": "float64",
                  "id": 100,
                  "ideas": {
                    "1": {
                      "title": "double precision",
                      "id": 102
                    }
                  }
                },
                "5": {
                  "title": "complex number",
                  "id": 103,
                  "ideas": {
                    "1": {
                      "title": "complex64",
                      "id": 104
                    },
                    "2": {
                      "title": "complex128",
                      "id": 105
                    }
                  }
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        },
        "2": {
          "title": "Strings",
          "id": 24,
          "ideas": {
            "1": {
              "title": "String literals can be created using double quotes \"Hello\" or back ticks `Hello World`",
              "id": 106,
              "ideas": {
                "1": {
                  "title": "double quotes",
                  "id": 107,
                  "ideas": {
                    "1": {
                      "title": "cannot contain newlines and allow special escape sequences",
                      "id": 109
                    }
                  }
                },
                "2": {
                  "title": "back ticks",
                  "id": 108
                }
              }
            },
            "2": {
              "title": "concatenation",
              "id": 110,
              "ideas": {
                "1": {
                  "title": "+",
                  "id": 111
                }
              }
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        },
        "3": {
          "title": "Booleans",
          "id": 25,
          "ideas": {
            "1": {
              "title": "named after George Boole",
              "id": 112
            },
            "2": {
              "title": "a special 1 bit integer type",
              "id": 113
            },
            "3": {
              "title": "logical operators",
              "id": 114,
              "ideas": {
                "1": {
                  "title": "&&",
                  "id": 115
                },
                "2": {
                  "title": "||",
                  "id": 116
                },
                "3": {
                  "title": "!",
                  "id": 117
                }
              }
            }
          }
        },
        "0.5": {
          "title": "type vs token vs set",
          "id": 81,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "set is similar to type",
              "id": 82
            }
          }
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "31": {
      "title": "4. Variables",
      "id": 5,
      "ideas": {
        "1": {
          "title": "How to Name a Variable",
          "id": 26,
          "ideas": {
            "1": {
              "title": "creating a new variable with a starting value",
              "id": 118,
              "ideas": {
                "1": {
                  "title": ":=",
                  "id": 119
                }
              }
            },
            "2": {
              "title": "Generally you should use this shorter form whenever possbile",
              "id": 120
            },
            "3": {
              "title": "lower camel case",
              "id": 123,
              "ideas": {
                "1": {
                  "title": "mixed case",
                  "id": 124
                },
                "2": {
                  "title": "bumpy caps",
                  "id": 125
                },
                "3": {
                  "title": "camel back",
                  "id": 126
                },
                "4": {
                  "title": "hump back",
                  "id": 127
                }
              }
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        },
        "2": {
          "title": "Scope",
          "id": 27
        },
        "3": {
          "title": "Constants",
          "id": 28
        },
        "4": {
          "title": "Defining Multiple Variables",
          "id": 29
        },
        "5": {
          "title": "An Example Program",
          "id": 30
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "41": {
      "title": "5. Control Structures",
      "id": 7,
      "ideas": {
        "1": {
          "title": "For",
          "id": 31
        },
        "2": {
          "title": "If",
          "id": 32
        },
        "3": {
          "title": "Switch",
          "id": 33
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "51": {
      "title": "6. Arrays, Slices and Maps",
      "id": 8,
      "ideas": {
        "1": {
          "title": "Arrays",
          "id": 34
        },
        "2": {
          "title": "Slices",
          "id": 35,
          "ideas": {
            "1": {
              "title": "Slices are always associated with some array, and although they can never be longer than the array, they can be smaller.",
              "id": 128
            },
            "2": {
              "title": "Slice Functions",
              "id": 129,
              "ideas": {
                "1": {
                  "title": "append",
                  "id": 130
                },
                "2": {
                  "title": "copy",
                  "id": 131
                }
              }
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        },
        "3": {
          "title": "Maps",
          "id": 36,
          "ideas": {
            "1": {
              "title": "an unordered collection of key-value pairs",
              "id": 132
            },
            "2": {
              "title": "associative  array",
              "id": 133
            },
            "3": {
              "title": "hash table",
              "id": 134
            },
            "4": {
              "title": "dictionary",
              "id": 135
            },
            "5": {
              "title": "maps are used to look up a value by its associated key",
              "id": 137
            },
            "6": {
              "title": "var x map[string] int",
              "id": 138,
              "ideas": {
                "1": {
                  "title": "x is a map of strings to ints",
                  "id": 139
                }
              }
            },
            "7": {
              "title": "a map returns the zero value for the value type for an element that doesn't exist",
              "id": 140
            },
            "8": {
              "title": "map[string]map[string]string",
              "id": 142,
              "ideas": {
                "1": {
                  "title": "z = f(x, y)",
                  "id": 143
                }
              }
            }
          }
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "61": {
      "title": "7. Functions",
      "id": 9,
      "ideas": {
        "1": {
          "title": "Your Second Function",
          "id": 37
        },
        "2": {
          "title": "Returning Multiple Values",
          "id": 38,
          "ideas": {
            "1": {
              "title": "Multiple values are often used to reurn an error value along with the result, or a boolean to indicate success",
              "id": 144,
              "ideas": {
                "1": {
                  "title": "x, err := f()",
                  "id": 145
                },
                "2": {
                  "title": "x, ok = f()",
                  "id": 146
                }
              }
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        },
        "3": {
          "title": "Variadic Functions",
          "id": 39
        },
        "4": {
          "title": "Closure",
          "id": 40
        },
        "5": {
          "title": "Recursion",
          "id": 41
        },
        "6": {
          "title": "Defer, Panic & Recover",
          "id": 42
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "71": {
      "title": "8. Pointers",
      "id": 10,
      "ideas": {
        "1": {
          "title": "The * and & operators",
          "id": 43
        },
        "2": {
          "title": "new",
          "id": 44
        }
      },
      "attr": {
        "collapsed": true,
        "style": {}
      }
    },
    "81": {
      "title": "9. Structures and Interfaces",
      "id": 11,
      "ideas": {
        "1": {
          "title": "Structs",
          "id": 45
        },
        "2": {
          "title": "Methods",
          "id": 46
        },
        "3": {
          "title": "Interfaces",
          "id": 47
        }
      },
      "attr": {
        "collapsed": true,
        "style": {}
      }
    },
    "91": {
      "title": "10. Concurrency",
      "id": 12,
      "ideas": {
        "1": {
          "title": "Goroutines",
          "id": 48
        },
        "2": {
          "title": "Channels",
          "id": 49
        }
      },
      "attr": {
        "collapsed": true,
        "style": {}
      }
    },
    "101": {
      "title": "11. Packages",
      "id": 13,
      "ideas": {
        "1": {
          "title": "Creating Packages",
          "id": 50
        },
        "2": {
          "title": "Documentation",
          "id": 51
        }
      },
      "attr": {
        "collapsed": true,
        "style": {}
      }
    },
    "111": {
      "title": "12. Testing",
      "id": 14
    },
    "121": {
      "title": "13. The Core Packages",
      "id": 15,
      "ideas": {
        "1": {
          "title": "Strings",
          "id": 52
        },
        "2": {
          "title": "Input / Output",
          "id": 53
        },
        "3": {
          "title": "Files & Folders",
          "id": 54
        },
        "4": {
          "title": "Errors",
          "id": 55
        },
        "5": {
          "title": "Containers & Sort",
          "id": 56
        },
        "6": {
          "title": "Hashes & Cryptography",
          "id": 57
        },
        "7": {
          "title": "Servers",
          "id": 58
        },
        "8": {
          "title": "Parsing Command Line Arguments",
          "id": 59
        },
        "9": {
          "title": "Synchronization Primitives",
          "id": 60
        }
      },
      "attr": {
        "collapsed": true,
        "style": {}
      }
    },
    "131": {
      "title": "14. Next Steps",
      "id": 16,
      "ideas": {
        "1": {
          "title": "Study the Masters",
          "id": 61,
          "ideas": {
            "1": {
              "title": "http://golang.org/src/pkg",
              "id": 147
            }
          }
        },
        "2": {
          "title": "Make Something",
          "id": 62
        },
        "3": {
          "title": "Team Up",
          "id": 63,
          "ideas": {
            "1": {
              "title": "golang-nuts",
              "id": 148
            }
          }
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    }
  },
  "links": []
}